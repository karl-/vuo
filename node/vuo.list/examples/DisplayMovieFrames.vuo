/**
 * @file
 * Picks out and displays still-frames spanning the duration of a movie.
 *
 * @lastSavedInVuoVersion 2.0.0
 * @copyright Copyright © 2012–2020 Kosada Incorporated.
 * @license This composition may be modified and distributed under the terms of the MIT License. For more information, see https://opensource.org/licenses/MIT .
 * @see This is a Vuo Composition source code file.  See https://vuo.org for further information.
 */

digraph G
{
ArrangeLayersInGrid [type="vuo.layer.arrange.grid" version="1.1.0" label="Arrange Layers in Grid|<refresh>refresh\l|<layers>layers\l|<scaleToFit>scaleToFit\l|<anchor>anchor\l|<center>center\l|<width>width\l|<columns>columns\l|<height>height\l|<rows>rows\l|<griddedLayer>griddedLayer\r" pos="600,75" _scaleToFit="true" _anchor="\{\"horizontalAlignment\":\"center\",\"verticalAlignment\":\"center\"\}" _center="[\{\"x\":0,\"y\":0\}]" _width="1.800000" _columns="4" _height="1.250000" _rows="3"];
BuildList2 [type="vuo.list.build.VuoLayer" version="1.0.1" label="Build List|<refresh>refresh\l|<fire>fire\l|<builtItem>builtItem\l|<builtList>builtList\r|<buildItem>buildItem\r" pos="315,75" fillcolor="orange" _fire="12" _builtList_eventThrottling="enqueue" _buildItem_eventThrottling="enqueue"];
ConvertFrameToImage [type="vuo.type.videoframe.image" version="1.0.0" label="Convert Frame to Image|<refresh>refresh\l|<frame>frame\l|<image>image\r" pos="915,555"];
ConvertIntegerToRealNumber [type="vuo.type.integer.real" version="1.0.0" label="Convert Integer to Real Number|<refresh>refresh\l|<integer>integer\l|<real>real\r" pos="495,390"];
DecodeMovieImage [type="vuo.video.decodeImage" version="2.2.0" label="Decode Movie Image|<refresh>refresh\l|<url>url\l|<frameTime>frameTime\l|<loop>loop\l|<videoFrame>videoFrame\r" pos="390,345" _loop="\"loop\""];
FireOnStart [type="vuo.event.fireOnStart" version="1.0.0" label="Fire on Start|<refresh>refresh\l|<started>started\r" pos="-420,75" fillcolor="lime" _started_eventThrottling="enqueue"];
GetMovieInfo [type="vuo.video.info" version="2.0.2" label="Get Movie Info|<refresh>refresh\l|<url>url\l|<duration>duration\r" pos="-75,435"];
HoldValue2 [type="vuo.data.hold2.VuoReal" version="3.0.0" label="Hold Value|<refresh>refresh\l|<update>update\l|<value>value\l|<heldValue>heldValue\r" pos="90,420"];
MakeList5 [type="vuo.list.make.1.VuoLayer" version="2.0.0" label="Make List|<refresh>refresh\l|<1>1\l|<list>list\r" pos="824,86" fillcolor="blue"];
MakeScaledLayer [type="vuo.layer.make.scaled" version="3.0.0" label="Make Image Layer|<refresh>refresh\l|<image>image\l|<anchor>anchor\l|<center>center\l|<rotation>rotation\l|<width>width\l|<opacity>opacity\l|<layer>layer\r" pos="675,345" _anchor="\{\"horizontalAlignment\":\"center\",\"verticalAlignment\":\"center\"\}" _center="\{\"x\":0.000000,\"y\":0.000000\}" _rotation="0.000000" _width="2.000000" _opacity="1.000000"];
RenderLayersToWindow [type="vuo.layer.render.window2" version="3.0.0" label="Render Layers to Window|<refresh>refresh\l|<layers>layers\l|<multisampling>multisampling\l|<setWindowDescription>setWindowDescription\l|<updatedWindow>updatedWindow\r" pos="870,75" fillcolor="blue" _multisampling="\"4\"" _updatedWindow_eventThrottling="enqueue"];
Scale [type="vuo.math.scale.VuoReal" version="2.0.0" label="Scale|<refresh>refresh\l|<value>value\l|<start>start\l|<end>end\l|<scaledStart>scaledStart\l|<scaledEnd>scaledEnd\l|<limitToRange>limitToRange\l|<scaledValue>scaledValue\r" pos="225,360" _start="1.000000" _end="12.000000" _scaledStart="0.000000" _limitToRange="false"];
ShareValue2 [type="vuo.data.share.VuoText" version="1.0.0" label="Share Value|<refresh>refresh\l|<value>value\l|<sameValue>sameValue\r" pos="-240,195" _value="\"\\/System\\/Library\\/Compositions\\/Rollercoaster.mov\""];

ArrangeLayersInGrid:griddedLayer -> MakeList5:1;
BuildList2:buildItem -> ConvertIntegerToRealNumber:integer;
BuildList2:buildItem -> HoldValue2:update;
BuildList2:builtList -> ArrangeLayersInGrid:layers;
ConvertFrameToImage:image -> MakeScaledLayer:image;
ConvertIntegerToRealNumber:real -> Scale:value;
DecodeMovieImage:videoFrame -> ConvertFrameToImage:frame;
FireOnStart:started -> BuildList2:fire;
FireOnStart:started -> ShareValue2:value;
GetMovieInfo:duration -> HoldValue2:value;
HoldValue2:heldValue -> Scale:scaledEnd;
MakeList5:list -> RenderLayersToWindow:layers;
MakeScaledLayer:layer -> BuildList2:builtItem;
Scale:scaledValue -> DecodeMovieImage:frameTime;
ShareValue2:sameValue -> DecodeMovieImage:url;
ShareValue2:sameValue -> GetMovieInfo:url;
}
