/**
 * @file
 * Test composition.
 *
 * @copyright Copyright © 2012–2017 Kosada Incorporated.
 * This code may be modified and distributed under the terms of the MIT License.
 * For more information, see http://vuo.org/license.
 */

digraph G
{
ChangeWindowPosition [type="vuo.window.position" version="1.0.0" label="Change Window Position|<refresh>refresh\l|<topLeft>topLeft\l|<unit>unit\l|<property>property\r" pos="-15,240" _topLeft="{\"x\":200,\"y\":100}" _unit="\"points\""];
MakeList3 [type="vuo.list.make.1.VuoWindowProperty" version="2.0.0" label="Make List|<refresh>refresh\l|<1>1\l|<list>list\r" pos="192,251"];
MakeList4 [type="vuo.list.make.0.VuoLayer" version="2.0.0" label="Make List|<refresh>refresh\l|<list>list\r" pos="164,221"];
RenderLayersToWindow [type="vuo.layer.render.window" version="2.3.0" label="Render Layers to Window|<refresh>refresh\l|<layers>layers\l|<multisampling>multisampling\l|<setWindowProperties>setWindowProperties\l|<showedWindow>showedWindow\r|<requestedFrame>requestedFrame\r|<renderedLayers>renderedLayers\r" pos="225,210" _multisampling="\"4\"" _showedWindow_eventThrottling="enqueue" _requestedFrame_eventThrottling="drop" _renderedLayers_eventThrottling="enqueue"];
SelectEventOutput2 [type="vuo.select.out.event.8" version="2.0.0" label="Select Event Output|<refresh>refresh\l|<which>which\l|<in>in\l|<option1>option1\r|<option2>option2\r|<option3>option3\r|<option4>option4\r|<option5>option5\r|<option6>option6\r|<option7>option7\r|<option8>option8\r" pos="-225,210"];
PublishedInputs [type="vuo.in" label="PublishedInputs|<Which>Which\r" _Which_type="VuoInteger" _Which_suggestedMin="1" _Which_suggestedMax="8" _Which="1"];
PublishedOutputs [type="vuo.out" label="PublishedOutputs|<ShowedWindow>ShowedWindow\l" _ShowedWindow_type="VuoWindowReference"];

ChangeWindowPosition:property -> MakeList3:1;
MakeList3:list -> RenderLayersToWindow:setWindowProperties;
MakeList4:list -> RenderLayersToWindow:layers;
PublishedInputs:Which -> SelectEventOutput2:which;
RenderLayersToWindow:showedWindow -> PublishedOutputs:ShowedWindow;
SelectEventOutput2:option1 -> ChangeWindowPosition:refresh;
SelectEventOutput2:option3 -> RenderLayersToWindow:refresh;
}
